<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
						http://www.springframework.org/schema/context
					    http://www.springframework.org/schema/context/spring-context-3.1.xsd
					    http://www.springframework.org/schema/tx
					    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
					    
	
	<!-- 扫描指定包下的所有类，让标注Spring注解的类生效,组件扫描 -->
    <context:component-scan base-package="cn.appsys.service,cn.appsys.dao"/>
	<!-- 读取数据库配置文件 -->
	<context:property-placeholder location="classpath:database.properties" />				    
	<!-- 获取数据源（使用dbcp连接池） -->
	<!-- 及数据源相关配置 新增配置SQL心跳包等补充内容 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
							destroy-method="close" scope="singleton">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxActive" value="${maxActive}"/>
		<property name="maxIdle" value="${maxIdle}"/>
		<property name="minIdle" value="${minIdle}"/>
		<property name="maxWait" value="${maxWait}"/>
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
		<property name="removeAbandoned" value="${removeAbandoned}"/>
		<!-- SQL心跳 -->
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select 1" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="numTestsPerEvictionRun" value="${maxActive}" />
	</bean>		
	<!-- 配置事务管理器  引用数据源,采用aop的方式进行事务处理，定义所有以smbms开头的业务方法都会进行事务处理-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	
	<!-- AOP事务处理 -->
	<aop:aspectj-autoproxy/>
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* *cn.appsys.service..*(..))" id="transService"/>
		<aop:advisor  pointcut-ref="transService" advice-ref="txAdvice"/>
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置mybatis的SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    
    <!-- 配置MyBatis的MapperScannerConfigurer -->
    <!-- 在Spring容器中注册MapperScannerConfigurer，并注入Mapper接口所在包名，
    Spring会自动查找其所有的Mapper，并自动注册Mapper对应的MapperFactoryBean对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="cn.appsys.dao"/>
    </bean>
					    
					    
					    
</beans>